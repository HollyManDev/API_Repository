using System;
using System.Data;
using System.Data.SqlClient;

public class ConexaoDB
{
    private SqlConnection connection;
    private string connectionString;

    public ConexaoDB(string connectionString)
    {
        this.connectionString = connectionString;
    }

    public void OpenConnection()
    {
        connection = new SqlConnection(connectionString);
        connection.Open();
    }

    public void CloseConnection()
    {
        connection.Close();
    }

    public SqlConnection GetConnection()
    {
        return connection;
    }
}

public class CrudOperations
{
    private ConexaoDB conexao;

    public CrudOperations(ConexaoDB conexao)
    {
        this.conexao = conexao;
    }

    public void Insert(string query)
    {
        try
        {
            conexao.OpenConnection();
            SqlCommand command = new SqlCommand(query, conexao.GetConnection());
            command.ExecuteNonQuery();
        }
        finally
        {
            conexao.CloseConnection();
        }
    }

    public DataTable Select(string query)
    {
        DataTable dataTable = new DataTable();
        try
        {
            conexao.OpenConnection();
            SqlCommand command = new SqlCommand(query, conexao.GetConnection());
            SqlDataReader reader = command.ExecuteReader();
            dataTable.Load(reader);
            reader.Close();
            return dataTable;
        }
        finally
        {
            conexao.CloseConnection();
        }
    }

    public void Update(string query)
    {
        try
        {
            conexao.OpenConnection();
            SqlCommand command = new SqlCommand(query, conexao.GetConnection());
            command.ExecuteNonQuery();
        }
        finally
        {
            conexao.CloseConnection();
        }
    }

    public void Delete(string query)
    {
        try
        {
            conexao.OpenConnection();
            SqlCommand command = new SqlCommand(query, conexao.GetConnection());
            command.ExecuteNonQuery();
        }
        finally
        {
            conexao.CloseConnection();
        }
    }
}

class Program
{
    static void Main(string[] args)
    {
        string connectionString = "Your_Connection_String_Here";
        ConexaoDB conexao = new ConexaoDB(connectionString);
        CrudOperations crud = new CrudOperations(conexao);

        // Exemplo de utilização
        // Insert
        string insertQuery = "INSERT INTO TableName (Column1, Column2) VALUES ('Value1', 'Value2')";
        crud.Insert(insertQuery);

        // Select
        string selectQuery = "SELECT * FROM TableName";
        DataTable dataTable = crud.Select(selectQuery);
        foreach (DataRow row in dataTable.Rows)
        {
            Console.WriteLine(row["ColumnName"]);
        }

        // Update
        string updateQuery = "UPDATE TableName SET Column1 = 'NewValue' WHERE Column2 = 'Value2'";
        crud.Update(updateQuery);

        // Delete
        string deleteQuery = "DELETE FROM TableName WHERE Column1 = 'NewValue'";
        crud.Delete(deleteQuery);
    }
}

SELECT COUNT(*) AS TotalMulheres
FROM Pessoas
WHERE Genero = 'Feminino';

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;

public class Pessoa
{
    public int Id { get; set; }
    public string Nome { get; set; }
    public int Idade { get; set; }
    // Outras propriedades, construtores, etc., conforme necessário
}

public class DatabaseOperations
{
    private string connectionString;

    public DatabaseOperations(string connectionString)
    {
        this.connectionString = connectionString;
    }

    public List<Pessoa> SelectAllPessoas()
    {
        List<Pessoa> pessoas = new List<Pessoa>();

        using (SqlConnection connection = new SqlConnection(connectionString))
        {
            string query = "SELECT Id, Nome, Idade FROM Pessoas";

            using (SqlCommand command = new SqlCommand(query, connection))
            {
                connection.Open();
                using (SqlDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        Pessoa pessoa = new Pessoa
                        {
                            Id = Convert.ToInt32(reader["Id"]),
                            Nome = reader["Nome"].ToString(),
                            Idade = Convert.ToInt32(reader["Idade"])
                        };
                        pessoas.Add(pessoa);
                    }
                }
            }
        }

        return pessoas;
    }
}

class Program
{
    static void Main(string[] args)
    {
        string connectionString = "Your_Connection_String_Here";
        DatabaseOperations db = new DatabaseOperations(connectionString);
        
        List<Pessoa> pessoas = db.SelectAllPessoas();

        foreach (Pessoa pessoa in pessoas)
        {
            Console.WriteLine($"Id: {pessoa.Id}, Nome: {pessoa.Nome}, Idade: {pessoa.Idade}");
        }
    }
}
